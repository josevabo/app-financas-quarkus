#quarkus.log.level=INFO
#quarkus.http.port=8082

# DATABASE CONFIGURATION

#quarkus.hibernate-orm.jdbc.statement-batch-size=100
quarkus.datasource.db-kind=mysql
%prod.quarkus.datasource.username=${QUARKUS_DATASOURCE_USERNAME}
%prod.quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD}
%prod.quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL}
%dev.quarkus.datasource.username=root
%dev.quarkus.datasource.password=root
%dev.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/app_financas
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.bind-parameters=true
quarkus.log.min-level=TRACE

# HTTP CONFIGURATIONS

#//FIXME cors ajustado para localhost. Verificar se ambiente des vai funcionar corretamente
quarkus.http.cors=true
quarkus.http.cors.exposed-headers=Content-Disposition
%dev.quarkus.http.cors.origins=http://localhost:4200,http://localhost:9090

quarkus.http.access-log.enabled=true

# AUTH CONFIGURATION
#quarkus.http.auth.basic=true
#quarkus.http.auth.form.enabled=true

## Internal Auth JWT
quarkus.smallrye-jwt.enabled=true
mp.jwt.verify.issuer=http://appfinancas.com.br
quarkus.native.resources.includes=publicKey.pem
mp.jwt.verify.publickey.location=publicKey.pem
smallrye.jwt.sign.key.location=privateKey.pem
#default value is 300
smallrye.jwt.new-token.lifespan=86400
#default value is 60
smallrye.jwt.expiration.grace=120

#%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus
#%dev.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus
##%test.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus
#quarkus.oidc.client-id=backend-service
#quarkus.oidc.credentials.secret=secret

# Tell Dev Services for Keycloak to import the realm file
# This property is not effective when running the application in JVM or Native modes
# docker run --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin -p 8180:8080 quay.io/keycloak/keycloak:17.0.0 start-dev
#quarkus.keycloak.devservices.realm-path=quarkus-realm.json
#%dev.quarkus.oidc.tenant.enabled=false

#%dev.quarkus.test.profile.tags=datasource-integration
#%prod.quarkus.test.profile.tags=mocked-datasource

# OPENAPI Configuration
#quarkus.smallrye-openapi.info-title=Climbpedia
#%dev.quarkus.smallrye-openapi.info-title=Climbpedia (development)
#%test.quarkus.smallrye-openapi.info-title=Climbpedia (test)
#quarkus.smallrye-openapi.info-version=1.0.0
#quarkus.smallrye-openapi.info-description=Serviço para colaboração entre escaladores
#quarkus.smallrye-openapi.info-terms-of-service=Uso livre. Serviço criado para fins didáticos
#quarkus.smallrye-openapi.info-contact-email=suporte@climbpedia.com
#quarkus.smallrye-openapi.info-contact-name=Climbpedia Suporte
#quarkus.smallrye-openapi.info-contact-url=http://climbpedia.com.br/contact
#quarkus.smallrye-openapi.info-license-name=Apache 2.0
#quarkus.smallrye-openapi.info-license-url=https://www.apache.org/licenses/LICENSE-2.0.html
#desabilita todas as anotações de openapi, o swagger resultante de /q/openapi contém apenas dados do arquivo META-INF/openapi.yaml
#mp.openapi.scan.disable=true
#mp.openapi.extensions.smallrye.operationIdStrategy=PACKAGE_CLASS_METHOD
# Permite swagger UI inclusive em prod, padrao é apenas dev e test
quarkus.swagger-ui.always-include=true
#quarkus.swagger-ui.path=my-custom-path


# Cache configuration
#quarkus.cache.caffeine."vias-search-text".expire-after-write=3600S
#quarkus.cache.caffeine."vias-search-text".metrics-enabled=true #if using prometheus



